/*
SQLyog Enterprise - MySQL GUI v8.14
MySQL - 5.7.30 : Database - sysadm
*********************************************************************
*/


/*!40101 SET NAMES utf8 */;

/*!40101 SET SQL_MODE=''*/;

/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
CREATE DATABASE /*!32312 IF NOT EXISTS*/`sysadm` /*!40100 DEFAULT CHARACTER SET latin1 */;

USE `sysadm`;

/*Table structure for table `user` */

DROP TABLE IF EXISTS `user`;

CREATE TABLE `user` (
  `userid` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT 'userid identified a user',
  `username` varchar(255) NOT NULL COMMENT 'user account',
  `email` varchar(255) DEFAULT NULL COMMENT 'user email address',
  `password` varchar(40) NOT NULL COMMENT 'user password',
  `realname` varchar(255) NOT NULL COMMENT 'user''s real name',
  `comment` varchar(255) DEFAULT NULL COMMENT 'description of a user',
  `deleted` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'the value is true if a user has be deleted',
  `reset_uuid` int(10) DEFAULT NULL COMMENT 'userid who reset the user''s password',
  `salt` varchar(40) NOT NULL COMMENT 'salt of the userpassword',
  `sysadmin_flag` tinyint(1) DEFAULT '0' COMMENT 'the user is an administor of the system if this value is ture',
  `creation_time` int(11) NOT NULL COMMENT 'the time when the user has be create',
  `update_time` int(11) NOT NULL COMMENT 'the time when the user has be update',
  PRIMARY KEY (`userid`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 CHECKSUM=1 DELAY_KEY_WRITE=1 ROW_FORMAT=DYNAMIC;

CREATE TABLE `project` (
  `projectid` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT 'projectid identified a project',
  `ownerid` int(10) unsigned NOT NULL DEFAULT '1' COMMENT 'the owner of the project. owner is the user who created the project normally',
  `name` varchar(255) NOT NULL COMMENT 'project name. it must be a string in english. Is is a part of url of image.',
  `comment` varchar(255) DEFAULT NULL COMMENT 'description of a project',
  `deleted` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'the value is true if a user has be deleted',
  `creation_time` int(11) NOT NULL COMMENT 'the time when the project has be create',
  `update_time` int(11) NOT NULL COMMENT 'the time when the project has be update',
  PRIMARY KEY (`projectid`),
  KEY `FK_project` (`ownerid`),
  CONSTRAINT `FK_project` FOREIGN KEY (`ownerid`) REFERENCES `user` (`userid`) ON DELETE NO ACTION ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 CHECKSUM=1 DELAY_KEY_WRITE=1 ROW_FORMAT=DYNAMIC;

CREATE TABLE `image` (
  `imageid` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT 'imageid identified a container image',
  `projectid` int(10) unsigned NOT NULL DEFAULT '1' COMMENT 'the project of the image. ',
  `name` varchar(255) NOT NULL COMMENT 'image name. it must be a string in english. Is is the uri of image.',
  `ownerid` int(10) unsigned NOT NULL DEFAULT '1' COMMENT 'the owner of the project. owner is the user who created the project normally',
  `description` varchar(255) DEFAULT NULL COMMENT 'the description of a image.',
  `tagsnum` int(10) unsigned NOT NULL DEFAULT '1' COMMENT 'total number of tags of the image',
  `lasttag` varchar(255) NOT NULL COMMENT 'the last tag of the image',
  `architecture` varchar(255) NOT NULL COMMENT 'architecture of the image',
  `pulltimes` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'total times of the image has be pulled',
  `creation_time` int(11) NOT NULL COMMENT 'the time when the project has be create',
  `update_time` int(11) NOT NULL COMMENT 'the time when the project has be update',
  `size` int(16) unsigned NOT NULL DEFAULT '0' COMMENT 'the size of the image',
  PRIMARY KEY (`imageid`),
  KEY `FK_projectr` (`projectid`),
  KEY `FK_user` (`ownerid`),
  CONSTRAINT `FK_projectr` FOREIGN KEY (`projectid`) REFERENCES `project` (`projectid`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `FK_user` FOREIGN KEY (`ownerid`) REFERENCES `user` (`userid`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 CHECKSUM=1 DELAY_KEY_WRITE=1 ROW_FORMAT=DYNAMIC


CREATE TABLE `tag` (
  `tagid` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT 'tagid identified a tag of a image',
  `imageid` int(10) unsigned NOT NULL DEFAULT '1' COMMENT 'imageid identified a container image',
  `name` varchar(255) NOT NULL COMMENT 'tag name. it must be a string in english. Is is a part of the uri of image.',
  `description` varchar(255) DEFAULT NULL COMMENT 'the description of a tag.',
  `pulltimes` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'total times of the tag has be pulled',
  `ownerid` int(10) unsigned NOT NULL DEFAULT '1' COMMENT 'the owner of the tag. owner is the user who pushed the image normally',
  `creation_time` int(11) NOT NULL COMMENT 'the time when the tag has be pushed',
  `update_time` int(11) NOT NULL COMMENT 'the time when the tag has be pushed lastly',
  `size` int(16) unsigned NOT NULL DEFAULT '0' COMMENT 'the size of the  tag',
  `digest` varchar(255) DEFAULT NULL COMMENT 'the digest of the tag ',
  PRIMARY KEY (`tagid`),
  KEY `FK_image` (`imageid`),
  KEY `FK_taguser` (`ownerid`),
  CONSTRAINT `FK_image` FOREIGN KEY (`imageid`) REFERENCES `image` (`imageid`) ON DELETE NO ACTION ON UPDATE CASCADE,
  CONSTRAINT `FK_taguser` FOREIGN KEY (`ownerid`) REFERENCES `user` (`userid`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8 CHECKSUM=1 DELAY_KEY_WRITE=1 ROW_FORMAT=DYNAMIC

create table `blob` (
	`blobid` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'blobid identified a blob of a tag',
	`tagid` INT(10) UNSIGNED NOT NULL DEFAULT '1' COMMENT 'tagid identified a container image',
	`digest` VARCHAR(255) NOT NULL COMMENT 'digest of blog. it must be a string in english.',
	`size` INT(16) UNSIGNED NOT NULL DEFAULT '0' COMMENT 'the size of the  blob',
	`creation_time` INT(11) NOT NULL COMMENT 'the time when the tag has be pushed',
    `update_time` INT(11) NOT NULL COMMENT 'the time when the tag has be pushed lastly',
	PRIMARY KEY (`blobid`),
	KEY `FK_tag` (`tagid`),
	CONSTRAINT `FK_tag` FOREIGN KEY (`tagid`) REFERENCES `tag` (`tagid`) ON DELETE NO ACTION ON UPDATE CASCADE
) ENGINE=INNODB DEFAULT CHARSET=utf8 CHECKSUM=1 DELAY_KEY_WRITE=1 ROW_FORMAT=DYNAMIC;

DROP TABLE IF EXISTS `os`;

CREATE TABLE `os` (
  `osID` int(3) NOT NULL COMMENT 'pecify the yum for which OS distrubition,such as centos,readhat, ubantu',
  `name` varchar(10) NOT NULL COMMENT 'distribution name.such as centos,redhat. this field must be unique',
  `architecture` varchar(50) NOT NULL DEFAULT 'x86' COMMENT '体系构架',
  `bit` int(3) DEFAULT '64' COMMENT '位数',
  `description` varchar(255) DEFAULT NULL COMMENT 'distribution description',
  PRIMARY KEY (`osID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `os` */

insert  into `os`(`osID`,`name`,`architecture`,`bit`,`description`) values (1,'centos','x86',64,'CentOS'),(2,'redhat','x86',64,'RedHat Enterprise'),(3,'ubantu','x86',64,'Ubantu');

CREATE TABLE `type` (
  `typeID` int(3) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) CHARACTER SET latin1 NOT NULL,
  `comment` varchar(255) CHARACTER SET latin1 DEFAULT NULL,
  PRIMARY KEY (`typeID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin CHECKSUM=1 DELAY_KEY_WRITE=1 ROW_FORMAT=DYNAMIC;

CREATE TABLE `version` (
  `versionID` int(11) NOT NULL COMMENT 'version id identified a version ',
  `name` varchar(255) CHARACTER SET latin1 NOT NULL COMMENT 'version name',
  `osid` int(11) DEFAULT NULL COMMENT 'for which OS.PK of distribution ID',
  `typeID` int(11) DEFAULT NULL COMMENT 'the version for which type of type id',
  `description` varchar(255) CHARACTER SET latin1 DEFAULT NULL COMMENT 'description of the version',
  PRIMARY KEY (`versionID`),
  KEY `FK_os` (`osid`),
  KEY `FK_type` (`typeID`),
  CONSTRAINT `FK_os` FOREIGN KEY (`osid`) REFERENCES `os` (`osID`) ON DELETE CASCADE,
  CONSTRAINT `FK_type` FOREIGN KEY (`typeID`) REFERENCES `type` (`typeID`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin CHECKSUM=1 DELAY_KEY_WRITE=1 ROW_FORMAT=DYNAMIC

CREATE TABLE `yum` (
  `yumid` int(11) unsigned NOT NULL AUTO_INCREMENT COMMENT 'yumid identified a yum configuration ',
  `name` varchar(255) NOT NULL COMMENT 'yum name. it must be a string in english. Is is the block name of yum configuration.',
  `osid` int(11) NOT NULL COMMENT 'specify the yum for which OS distrubition,such as centos,readhat, ubantu....',
  `versionid` int(11) DEFAULT NULL COMMENT 'which version of the OS is for by this yum. normally this is the value of $releasever',
  `typeid` int(11) NOT NULL COMMENT 'what type of the yum is it,such as os, docker, kubernetes,......',
  `catalog` varchar(11) DEFAULT NULL COMMENT 'which catalog  of the yum is it,such as base, update,plus,......',
  `kind` varchar(11) DEFAULT NULL COMMENT 'kind of the yum,such as local,remote.',
  `base_url` varchar(11) DEFAULT NULL COMMENT 'the url of yum if its kind is remote',
  `enabled` tinyint(1) NOT NULL DEFAULT '1' COMMENT 'whether enabled this yum. 1 for enabled, otherwise for disabled',
  `gpgcheck` tinyint(1) NOT NULL DEFAULT '1' COMMENT 'whether gpg check. 1 for check, otherwise for not check',
  `gpgkey` varchar(11) DEFAULT NULL COMMENT 'the path of the gpgkey file for local, the url of the gpgkey file for remote',
  PRIMARY KEY (`yumid`),
  KEY `FK_yumos` (`osid`),
  KEY `FK_yumtype` (`typeid`),
  KEY `FK_yumversion` (`versionid`),
  CONSTRAINT `FK_yumos` FOREIGN KEY (`osid`) REFERENCES `os` (`osID`) ON DELETE CASCADE,
  CONSTRAINT `FK_yumtype` FOREIGN KEY (`typeid`) REFERENCES `type` (`typeID`) ON DELETE CASCADE,
  CONSTRAINT `FK_yumversion` FOREIGN KEY (`versionid`) REFERENCES `version` (`versionID`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 CHECKSUM=1 DELAY_KEY_WRITE=1 ROW_FORMAT=DYNAMIC


/*Table structure for table `host` */

DROP TABLE IF EXISTS `host`;

/* 20240202: 取消host与project的关联 */
CREATE TABLE `host` (
  `hostid` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT 'hostid identified a host',
  `userid` int(10) NOT NULL COMMENT '主机所属的用户ID',
  `projectid` int(10) DEFAULT '0' COMMENT '主机所属的项目ID.',
  `hostname` varchar(63) DEFAULT NULL COMMENT 'host name of OS',
  `osID` int(3) NOT NULL COMMENT 'which OS distrubition,such as centos,readhat, ubantu',
  `osversionid` int(11) NOT NULL COMMENT 'version id identified OS version ',
  `status` varchar(20) NOT NULL COMMENT '主机状态',
  `ip` varchar(255) DEFAULT NULL COMMENT '当apiserver是以主动模式运行时，连接客户端agent的地址或域名',
  `iptype` tinyint(1) DEFAULT '4' COMMENT '主机的IP地址类型4表示ipv4 6表示IPV6',
  `passiveMode` tinyint(1) DEFAULT '0' COMMENT '是否被动模式，0表示主动模式 1表示被动模式',
  `commandUri` varchar(255) DEFAULT NULL COMMENT '当apiserver以主动模式运行时，apiserver向agent发送命令时，请求的发送目\n 标路径。如果本字段为空，则apiserver默认向/receiveCommand请求命令的状态',
  `commandStatusUri` varchar(255) DEFAULT NULL COMMENT '当apiserver以主动模式运行时，apiserver向agent查询命令的执行状态时，请求的发送目\n 标路径。如果本字段为空，则apiserver默认向/getCommandStatus请求命令的状态',
  `commandLogsUri` varchar(255) DEFAULT NULL COMMENT '当apiserver以主动模式运行时，apiserver向agent查询命令的执行日志时，请求的发送目\n          标路径。如果本字段为空，则apiserver默认向/getLogs请求命令的日志',
  `agentIsTls` tinyint(1) DEFAULT '0' COMMENT '当apiserver以主动模式运行时，apiserver连接agent是否使用TLS.0表示否，否则表示是',
  `agentCa` text COMMENT '当apiserver以主动模式运行时，apiserver连接agent时主动采用TLS,本子段是CA证书内容\n           ',
  `agentCert` text COMMENT '当apiserver以主动模式运行时，apiserver连接agent时主动采用TLS,本子段是证书内容',
  `agentKey` text COMMENT '当apiserver以主动模式运行时，apiserver连接agent时主动采用TLS,本子段是密钥内容',
  `insecureSkipVerify` tinyint(1) DEFAULT '1' COMMENT '当apiserver以主动模式运行时，apiserver连接agent时主动采用TLS,指定是否跳过检查不\n   合法证书。1表示是，否则为否',
  `agentPort` int(5) DEFAULT '0' COMMENT 'agent listen port when it runing in active\n  mode',
  `k8sclusterid` varchar(20) DEFAULT NULL COMMENT '节点所属集群ID，如果为空表示节点不隶属于任何K8S集群',
  `createTime` timestamp NULL DEFAULT CURRENT_TIMESTAMP COMMENT '主机创建时间截',
  `offlineStartTime` timestamp NULL DEFAULT '0000-00-00 00:00:00' COMMENT '主机下线开始时间',
  `deletetime` timestamp NULL DEFAULT '0000-00-00 00:00:00' COMMENT '主机删除时间',
  `dcid` int(20) unsigned NOT NULL DEFAULT '0' COMMENT '节点所属的数据中心ID',
  `azid` int(20) unsigned NOT NULL DEFAULT '0' COMMENT '节点所属的可用区ID',
  `machineID` char(32) DEFAULT NULL COMMENT '节点的machineID',
  `systemID` char(36) DEFAULT NULL COMMENT '节点systemID',
  `architecture` varchar(16) DEFAULT NULL COMMENT '节点架构',
  `kernelVersion` varchar(64) DEFAULT NULL COMMENT '操作系统内核版本',
  `remark` varchar(255) DEFAULT NULL COMMENT '备注',
  PRIMARY KEY (`hostid`),
  KEY `FK_status` (`status`),
  KEY `FK_osID` (`osID`),
  KEY `FK_version` (`osversionid`),
  CONSTRAINT `FK_osID` FOREIGN KEY (`osID`) REFERENCES `os` (`osID`),
  CONSTRAINT `FK_version` FOREIGN KEY (`osversionid`) REFERENCES `version` (`versionID`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8 CHECKSUM=1 DELAY_KEY_WRITE=1 ROW_FORMAT=DYNAMIC;


CREATE TABLE `hostIP` (
  `ipID` int(11) unsigned NOT NULL AUTO_INCREMENT COMMENT 'ipID identified a IP adress of host',
  `devName` varchar(10) DEFAULT NULL COMMENT 'interface name of which the ip set',
  `ipv4` varchar(20) DEFAULT NULL COMMENT 'IP address for IPV4',
  `maskv4` varchar(20) DEFAULT NULL COMMENT 'netmask address for ipv4 address',
  `ipv6` varchar(20) DEFAULT NULL COMMENT 'IP address for IPV6',
  `maskv6` varchar(20) DEFAULT NULL COMMENT 'netmask address for ipv4 address',
  `hostid` int(10) unsigned NOT NULL COMMENT 'identifying which host',
  `status` tinyint(1) NOT NULL DEFAULT '1' COMMENT ' 0 for offline, 1 for online',
  `isManage` tinyint(1) NOT NULL DEFAULT '0' COMMENT '0 not management ip, 1 management IP',
  PRIMARY KEY (`ipID`),
  KEY `FK_hostid` (`hostid`),
  CONSTRAINT `FK_hostid` FOREIGN KEY (`hostid`) REFERENCES `host` (`hostid`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 CHECKSUM=1 DELAY_KEY_WRITE=1 ROW_FORMAT=DYNAMIC

/* 此表中的mac字段移到hostIP表中，并尝试废弃此表 */
CREATE TABLE `hostMAC` (
  `macID` INT(11) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'macID identified a mac adress of host',
  `devName` VARCHAR(10) DEFAULT NULL COMMENT 'interface name of which the ip set',
  `mac` VARCHAR(20) DEFAULT NULL COMMENT 'mac address',
  `hostid` INT(10) UNSIGNED NOT NULL COMMENT 'identifying which host',
  PRIMARY KEY (`macID`),
  KEY `FK_hostmacid` (`hostid`),
  CONSTRAINT `FK_hostmacid` FOREIGN KEY (`hostid`) REFERENCES `host` (`hostid`) ON DELETE CASCADE
) ENGINE=INNODB DEFAULT CHARSET=utf8 CHECKSUM=1 DELAY_KEY_WRITE=1 ROW_FORMAT=DYNAMIC

/* 主机 yum 配置信息关系表 */
CREATE TABLE `hostYum` (
  `relationID` int(11) unsigned NOT NULL AUTO_INCREMENT COMMENT 'relationID identified relation of host and yum',
  `hostid` int(10) unsigned NOT NULL COMMENT 'identifying which host',
  `yumid` int(11) unsigned NOT NULL COMMENT 'yumid identified a yum configuration ',
  PRIMARY KEY (`relationID`),
  KEY `FK_hostyumID` (`hostid`),
  KEY `FK_hostYum` (`yumid`),
  CONSTRAINT `FK_hostYum` FOREIGN KEY (`yumid`) REFERENCES `yum` (`yumid`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `FK_hostyumID` FOREIGN KEY (`hostid`) REFERENCES `host` (`hostid`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 CHECKSUM=1 DELAY_KEY_WRITE=1 ROW_FORMAT=DYNAMIC

 /* 主机管理修改为通过agent组件方式，下面这个表删除 */
 /*
CREATE TABLE `hostUser` (
  `userID` int(11) unsigned NOT NULL AUTO_INCREMENT COMMENT 'userID identified a user on a host',
  `userName` varchar(255) NOT NULL COMMENT 'username on a host',
  `password` varchar(255) NOT NULL COMMENT 'password for a user on a host',
  `hostid` int(10) unsigned NOT NULL COMMENT 'identifying which host',
  PRIMARY KEY (`userID`),
  KEY `FK_hostUser` (`hostid`),
  CONSTRAINT `FK_hostUser` FOREIGN KEY (`hostid`) REFERENCES `host` (`hostid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 CHECKSUM=1 DELAY_KEY_WRITE=1 ROW_FORMAT=DYNAMIC
*/

/* 命令定义,即整个平台可以执行的命令类型列表 */
DROP TABLE IF EXISTS `commandDefined`;

CREATE TABLE `commandDefined` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT COMMENT '定义的命令ID值',
  `name` varchar(255) NOT NULL COMMENT '命令的名称，用于在前端显示时使用的',
  `command` varchar(64) NOT NULL COMMENT '需执行的命令，如果是内嵌命令与命令名称相同，如果是脚本或系统系统则是命令的绝对路径，不能为空，且在本表内不能有重复',
  `executionType` tinyint(1) NOT NULL DEFAULT '0' COMMENT '执行类型，具体类型含义见command对象中定义',
  `automationKind` tinyint(1) NOT NULL DEFAULT '0' COMMENT '自动执行类别，具体类别含义见command对象中定义',
  `objectName` varchar(255) DEFAULT NULL COMMENT '当命令自动执行的类别与对象有关时，本字段指定命令是针对哪个对象的',
  `paraKind` tinyint(1) DEFAULT '0' COMMENT '参数类别，具体含义参见command对象的定义文件',
  `dataFromObject` varchar(255) DEFAULT NULL COMMENT '命令数据来自的对象名称，即对于本字段所指定的满足条件的每一个对象都执行本指令',
  `crontab` varchar(255) DEFAULT NULL COMMENT '如果命令是crontab类别的自动执行命令，本字段指定crontab格式的执行时间和周期',
  `synchronized` tinyint(1) DEFAULT '0' COMMENT '指示命令是否是属地同步命令。所谓同步命令是指，命令能够快速执行完成，即能在一个HTTP会话请求超时之前（一般超时时间为几秒内）执行完成的命令。0表示同步命令，否则为异步命令',
  `osID` int(3) NOT NULL DEFAULT '0' COMMENT '适应的操作系统类型.0表示适应于所有操作系统',
  `osversionid` int(11) NOT NULL DEFAULT '0' COMMENT '适应的操作系统版本.0表示适应于所有版本',
  `dependent` int(11) NOT NULL DEFAULT '0' COMMENT '命令是否依赖于其它命令，0表示不依赖于其它命令的独立命令,否则本字段记录被依赖命令的id',
  `type` tinyint(1) NOT NULL DEFAULT '0' COMMENT '0表示内嵌命令,1系统命令, 2 脚本或批处理程序',
  `transactionScope` tinyint(1) NOT NULL DEFAULT '0' COMMENT '命令事务范围,当dependent值为0时忽略本字段值.含义见command对象定义文件',
  `mustParas` tinyint(1) NOT NULL DEFAULT '0' COMMENT '命令的执行是否必须带至少一个参数，0表示否，1表示1',
  `descriptions` varchar(255) DEFAULT NULL COMMENT '命令描述，一般包含功能和执行方法',
  `deprecated` tinyint(1) NOT NULL DEFAULT '0' COMMENT '是否废弃，0表示否，1表示是',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8 CHECKSUM=1 DELAY_KEY_WRITE=1 ROW_FORMAT=DYNAMIC;

/*Data for the table `commandDefined` */
insert  into `commandDefined`(`id`,`name`,`command`,`executionType`,`automationKind`,`objectName`,`paraKind`,`dataFromObject`,`crontab`,`synchronized`,`osID`,`osversionid`,`dependent`,`type`,`transactionScope`,`mustParas`,`descriptions`,`deprecated`) values (1,'addyumbyauto','addyum',0,0,'host',2,'yum','',0,1,1,0,0,0,0,'配置Yum源信息,创建节点时自动添加',0),(4,'getHostIps','gethostips',0,0,'host',0,NULL,'',0,1,1,0,0,0,0,'获取主机IP地址信息列表--自动执行',0),(5,'getHostIps','gethostips',1,0,'host',0,NULL,'',0,1,1,0,0,0,0,'获取主机IP地址信息列表--手动执行',0),(6,'addyumbyhand','addyum',1,0,'host',0,'yum','',0,1,1,0,0,0,0,'配置Yum源信息--手动执行',0),(8,'getsysinforlinux','getsysinfo',0,0,'host',0,NULL,'',0,1,1,0,0,0,0,'获取Linux系统信息--自动执行',0),(9,'getsysinforlinux','getsysinfo',1,0,'host',0,NULL,'',0,1,1,0,0,0,0,'获取Linux系统信息--手动执行',0),(10,'gethostname','gethostname',1,0,'host',0,NULL,NULL,0,1,1,0,0,0,0,'获取主机名称',0);

/* 命令参数定义. 命令参数当前仅支持：在执行命令时将命令所对应的参数值按照其ID值从小到大通过空格分格的方式传递给命令 */
/* 即sysadm会按以下形式执行命令 command para1 para2 para3 ...... */
/* 后续版本中可考虑在执行命令时对option和flag的支持 */
DROP TABLE IF EXISTS `commandParasDefined`;

CREATE TABLE `commandParasDefined` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT COMMENT '参数ID值',
  `commandID` int(11) unsigned DEFAULT NULL COMMENT '命令定义表中的命令ID',
  `paraKind` tinyint(1) NOT NULL DEFAULT '0' COMMENT '参数类别，具体含义参见command对象的定义文件',
  `key` varchar(255) DEFAULT NULL COMMENT '参数的字段名，当前仅作为标识，后续版本中可考虑在命令执行时将其值传递给命令',
  `value` varchar(255) DEFAULT NULL COMMENT '当参数类别是固定类别时，此值即为参数值.当参数类别为对象数据时，此值为对象对应表内记录的主键值',
  `tableName` varchar(255) DEFAULT NULL COMMENT '当参数类别为从对象表中获取时，本字段为指定对象的表名称',
  `pkName` varchar(255) default null COMMENT '当参数类别为从对象表中获取时，本字段为指定对象表内记录的主键值',
  `fieldName` varchar(255) default null COMMENT '当参数类别为从对象表中获取时，表示取以本字段值为字段名的对象表内字段值作为参数值',
  `subCommandID` int(11) DEFAULT '0' COMMENT '当参数类别为通过另一个命令获取时,本字段指定的是获取参数值的另一个命令的commandDefined表中对应ID值',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=35 DEFAULT CHARSET=utf8 CHECKSUM=1 DELAY_KEY_WRITE=1 ROW_FORMAT=DYNAMIC;

/*Data for the table `commandParasDefined` */
insert  into `commandParasDefined`(`id`,`commandID`,`paraKind`,`key`,`value`,`objectName`,`objectFieldName`,`subCommandID`) values (21,1,1,'name','','yum','name',0),(22,1,1,'catalog','','yum','catalog',0),(23,1,1,'kind','','yum','kind',0),(24,1,1,'baseurl','','yum','base_url',0),(25,1,1,'enabled','','yum','enabled',0),(26,1,1,'gpgcheck','','yum','gpgcheck',0),(27,1,1,'gpgkey','','yum','gpgkey',0),(28,6,1,'name','','yum','name',0),(29,6,1,'catalog','','yum','catalog',0),(30,6,1,'kind','','yum','kind',0),(31,6,1,'baseurl','','yum','base_url',0),(32,6,1,'enabled','','yum','enabled',0),(33,6,1,'gpgcheck','','yum','gpgcheck',0),(34,6,1,'gpgkey','','yum','gpgkey',0);

/* 存储节点上要执行和正在执行的命令的信息。执行完的命令信息自动移到commandHistory表中*/
/*Table structure for table `command` */
DROP TABLE IF EXISTS `command`;
CREATE TABLE `command` (
  `commandID` char(20) NOT NULL COMMENT 'commandID identified a command',
  `definedID` int(11) unsigned DEFAULT '0' COMMENT '命令定义表中的ID值',
  `dependendID` char(20) DEFAULT '0' COMMENT '命令是否依赖于其它命令，0表示不依赖于其它命令的独立命令,否则本字段记录被依赖命令的commandID',
  `type` tinyint(1) DEFAULT '0' COMMENT '0表示内嵌命令,1系统命令, 2 脚本或批处理程序',
  `transactionScope` tinyint(1) DEFAULT '0' COMMENT '命令事务范围,当dependent值为0时忽略本字段值.含义见command对象定义文件',
  `mustParas` tinyint(1) DEFAULT '0' COMMENT '命令的执行是否必须带至少一个参数，0表示否，1表示是',
  `command` varchar(64) NOT NULL COMMENT 'command name , agent will route handler according to the value of this filed',
  `hostID` int(10) unsigned NOT NULL COMMENT 'identifying which host',
  `crontab` varchar(255) DEFAULT NULL COMMENT '如果命令是crontab类别的自动执行命令，本字段指定crontab格式的执行时间和周期',
  `synchronized` tinyint(1) DEFAULT '0' COMMENT '指示命令是否是属地同步命令。所谓同步命令是指，命令能够快速执行完成，即能在一个HTTP会话请求超时之前（一般超时时间为几秒内）执行完成的命令。0表示同步命令，否则为异步命令',
  `createTime` int(11) NOT NULL COMMENT 'the time when the command  has be added',
  `sendTime` int(11) DEFAULT '0' COMMENT 'the time when the command has be has be sent to agent',
  `completeTime` int(11) DEFAULT '0' COMMENT 'the time when the command has be run',
  `tryTimes` tinyint(2) DEFAULT '0' COMMENT 'how many times has be tried on the current stage',
  `status` int(4) DEFAULT '0' COMMENT 'command status code',
  PRIMARY KEY (`commandID`),
  KEY `FK_hostCommand` (`hostID`),
  CONSTRAINT `FK_hostCommand` FOREIGN KEY (`hostID`) REFERENCES `host` (`hostid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 CHECKSUM=1 DELAY_KEY_WRITE=1 ROW_FORMAT=DYNAMIC;


/* 存储已经执行完成、出错和超时的命令的历史信息 */
DROP TABLE IF EXISTS `commandHistory`;

CREATE TABLE `commandHistory` (
  `commandID` char(20) NOT NULL DEFAULT '0' COMMENT 'commandID identified a command',
  `command` varchar(64) NOT NULL COMMENT 'command name , agent will route handler according to the value of this filed',
  `hostID` int(10) unsigned NOT NULL COMMENT 'identifying which host',
  `synchronized` tinyint(1) DEFAULT '0' COMMENT '指示命令是否是属地同步命令。所谓同步命令是指，命令能够快速执行完成，即能在一个HTTP会话请求超时之前（一般超时时间为几秒内）执行完成的命令。0表示同步命令，否则为异步命令',
  `createTime` int(11) NOT NULL COMMENT 'the time when the command  has be added',
  `sendTime` int(11) DEFAULT '0' COMMENT 'the time when the command has be has be sent to agent',
  `completeTime` int(11) DEFAULT '0' COMMENT 'the time when the command has be run',
  `tryTimes` tinyint(2) DEFAULT '0' COMMENT 'how many times has be tried on the current stage',
  `status` int(4) DEFAULT '0' COMMENT 'command status code',
  `statusMsg` varchar(255) DEFAULT '' COMMENT '被清理到历史表内的原因'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 CHECKSUM=1 DELAY_KEY_WRITE=1 ROW_FORMAT=DYNAMIC;

/* 存储在节点上执行的命令的命令参数信息 */
DROP TABLE IF EXISTS `commandParameters`;

CREATE TABLE `commandParameters` (
  `parametersID` int(11) unsigned NOT NULL AUTO_INCREMENT COMMENT 'parametersID identified a parameter',
  `name` varchar(64) NOT NULL COMMENT '对应于commandParasDefined表中的key',
  `value` varchar(255) DEFAULT NULL COMMENT '参数值',
  `commandID` char(20) NOT NULL COMMENT 'commandID identified a command',
  `paraKind` tinyint(1) DEFAULT '0' COMMENT '参数类别，具体含义参见command对象的定义文件',
  `subCommandID` char(20) DEFAULT NULL COMMENT '当参数类别为通过另一个命令获取时,本字段指定的是获取参数值的另一个命令的command表中对应ID值',
  PRIMARY KEY (`parametersID`),
  KEY `FK_commandParameters` (`commandID`)
) ENGINE=InnoDB AUTO_INCREMENT=247 DEFAULT CHARSET=utf8 CHECKSUM=1 DELAY_KEY_WRITE=1 ROW_FORMAT=DYNAMIC;


/* 存储命令状态的历史信息。当一个命令有多个阶段的时候，本表存储的是对应命令各个命令的状态信息 */
DROP TABLE IF EXISTS `commandStatusHistory`;

CREATE TABLE `commandStatusHistory` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT COMMENT 'id',
  `commandID` char(20) NOT NULL DEFAULT '0' COMMENT 'commandID identified a command',
  `command` varchar(64) NOT NULL COMMENT 'command name , agent will route handler according to the value of this filed',
  `hostID` int(10) unsigned NOT NULL COMMENT 'identifying which host',
  `receivedTime` int(11) DEFAULT '0' COMMENT '状态接收到的时间截',
  `status` int(4) DEFAULT '0' COMMENT '状态码,对应于CommandStatusCode',
  `statusMsg` varchar(255) DEFAULT '' COMMENT '状态信息的描述信息',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 CHECKSUM=1 DELAY_KEY_WRITE=1 ROW_FORMAT=DYNAMIC;


/* 存储在节点上执行的命令的发送和执行的日志信息 */
DROP TABLE IF EXISTS `commandLogs`;

CREATE TABLE `commandLogs` (
  `logID` int(11) unsigned NOT NULL AUTO_INCREMENT COMMENT 'logID identified a log',
  `logSeq` char(14) DEFAULT NULL COMMENT 'log sequence',
  `commandID` char(20) NOT NULL COMMENT 'commandID identified a command',
  `createTime` int(11) NOT NULL COMMENT 'the time when the log has be created',
  `level` int(2) DEFAULT NULL COMMENT 'log level',
  `operation` tinyint(1) NOT NULL DEFAULT '0' COMMENT '0: create command 1: send command  2: running 3: received result',
  `logMessage` varchar(255) DEFAULT NULL COMMENT 'log message',
  PRIMARY KEY (`logID`),
  KEY `FK_commandLogs` (`commandID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 CHECKSUM=1 DELAY_KEY_WRITE=1 ROW_FORMAT=DYNAMIC;

/* 在事务中向表中添加数据时，自增字段的值在当前事务中是获取不到的，为此增加ids表，该表记录拥有自增字段的表名、自增字段和自增字段的下一个值 */
CREATE TABLE `ids` (
  tableName VARCHAR(255) NOT NULL COMMENT 'table name which has AUTO_INCREMENT ID  field',
  fieldName VARCHAR(255) NOT NULL COMMENT 'field name which is a AUTO_INCREMENT ID  field',
  nextValue INT(11) NOT NULL DEFAULT 1 COMMENT 'the next value of ID'
) ENGINE=INNODB DEFAULT CHARSET=utf8 CHECKSUM=1 ROW_FORMAT=DYNAMIC

insert into `ids`(`tableName`,`fieldName`,`nextValue`) values ('host','hostid',1);
insert into `ids`(`tableName`,`fieldName`,`nextValue`) values ('command','commandID',1);

/* 全球各国家名称、代码表 */
CREATE TABLE `country`(
    chineseName VARCHAR(50) NOT NULL DEFAULT '' COMMENT '国家中文名称',
    englishName VARCHAR(50) NOT NULL DEFAULT '' COMMENT '国家英文名称',
    code CHAR(2) NOT NULL DEFAULT '' COMMENT '国家代码',
    display TINYINT(1) NOT NULL DEFAULT 0 COMMENT '是否显示在前台,0表示否，1表示是'
) ENGINE=INNODB DEFAULT CHARSET=utf8 CHECKSUM=1 ROW_FORMAT=DYNAMIC;

/* 全国区县表 */
DROP TABLE IF EXISTS `county`;
create table `county` (
    code char(6) not null default '' comment '区县代码',
    name varchar(50) not null default '' comment '区县名称',
    cityCode char(6) not null default '' comment '上级地级市代码'
) ENGINE=INNODB DEFAULT CHARSET=utf8 CHECKSUM=1 ROW_FORMAT=DYNAMIC;

/* 全国地级市列表 */
DROP TABLE IF EXISTS `city`;
create table `city` (
    code char(6) not null default '' comment '市级代码',
    name varchar(50) not null default '' comment '区级名称',
    provinceCode char(6) not null default '' comment '上级省市代码',
    countyList varchar(1024) not null default '' comment '下级县区代码列表，用,号分割'
) ENGINE=INNODB DEFAULT CHARSET=utf8 CHECKSUM=1 ROW_FORMAT=DYNAMIC;

/* 全国省市列表 */
DROP TABLE IF EXISTS `province`;
CREATE TABLE `province` (
  `code` char(6) NOT NULL DEFAULT '' COMMENT '省级代码',
  `name` varchar(50) NOT NULL DEFAULT '' COMMENT '省级名称',
  `cityList` varchar(1024) NOT NULL DEFAULT '' COMMENT '下级市级代码列表，用,号分割',
  `countryCode` char(2) DEFAULT 'CN' COMMENT '所属于的国家'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 CHECKSUM=1 ROW_FORMAT=DYNAMIC;

/* 数据中心表 */
DROP TABLE IF EXISTS `datacenter`;

CREATE TABLE `datacenter` (
  `id` int(4) unsigned NOT NULL AUTO_INCREMENT COMMENT '数据中心ID，此ID为主键，不可重复',
  `country` char(2) NOT NULL DEFAULT 'CN' COMMENT '数据中心所在的国家编码，对应country表里的code字段',
  `province` char(6) DEFAULT NULL COMMENT '数据中心所在的省市编码，对应于province表内的code',
  `city` char(6) DEFAULT NULL COMMENT '数据中心所在的地级市编码，对应于city表内的code',
  `county` char(6) DEFAULT NULL COMMENT '数据中心所在的县区编码，对应于county表内的code',
  `cnName` varchar(255) NOT NULL COMMENT '数据中心中文名称',
  `enName` varchar(255) DEFAULT NULL COMMENT '数据中心英文名称',
  `address` varchar(255) DEFAULT NULL COMMENT '数据中心地址',
  `dutyTel` varchar(20) DEFAULT NULL COMMENT '值班电话',
  `type` tinyint(1) NOT NULL COMMENT '数据中心类型 1电信 2 联通 3 移动 4 广电 5 双线BGP 6 三线BGP 7 四线BGP 8 国外',
  `status` tinyint(1) NOT NULL DEFAULT '1' COMMENT '状态0未启用 1已启用 2 已停用',
  `isDeleted` tinyint(1) NOT NULL DEFAULT '0' COMMENT '是否删除 0正常 1已删除',
  `createTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `updateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
  `createBy` int(10) unsigned DEFAULT NULL COMMENT '创建人,对应user表的userid',
  `updateBy` int(10) unsigned DEFAULT NULL COMMENT '更新人,对应user表的userid',
  `remark` varchar(255) DEFAULT NULL COMMENT '备注',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 CHECKSUM=1 ROW_FORMAT=DYNAMIC;

/*Data for the table `datacenter` */

insert  into `datacenter`(`id`,`no`,`country`,`province`,`city`,`county`,`cnName`,`enName`,`address`,`dutyTel`,`type`,`status`,`isDeleted`,`createTime`,`updateTime`,`createBy`,`updateBy`,`remark`) values (1,0,'CN','310000','310000','310107','电信真如机房',NULL,'上海市普陀区真大路6号','021-xxxxxxxx',0,1,0,'2023-07-04 14:28:57','2023-07-04 14:42:33',1,NULL,NULL),(2,1,'CN','110000','110000','110105','北京兆维电信IDC',NULL,'北京市朝阳区酒仙桥路14号兆维工业园区D区','010-xxxxxx',1,1,0,'2023-07-04 14:41:55','2023-07-04 14:42:43',1,NULL,NULL);

/* 可用区表 */
DROP TABLE IF EXISTS `availablezone`;

CREATE TABLE `availablezone` (
  `id` int(4) unsigned NOT NULL AUTO_INCREMENT COMMENT '可用区ID，此ID为主键，不可重复',
  `cnName` varchar(255) NOT NULL COMMENT '可用区中文名称',
  `enName` varchar(255) DEFAULT NULL COMMENT '可用区英文名称',
  `datacenterid` int(10) unsigned NOT NULL COMMENT '可用区所属的数据中心ID',
  `dutyTel` varchar(20) DEFAULT NULL COMMENT '值班电话',
  `status` tinyint(1) NOT NULL DEFAULT '1' COMMENT '状态0未启用 1已启用 2 已停用',
  `isDeleted` tinyint(1) NOT NULL DEFAULT '0' COMMENT '是否删除 0正常 1已删除',
  `createTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `updateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
  `createBy` int(10) unsigned DEFAULT NULL COMMENT '创建人,对应user表的userid',
  `updateBy` int(10) unsigned DEFAULT NULL COMMENT '更新人,对应user表的userid',
  `remark` varchar(255) DEFAULT NULL COMMENT '备注',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 CHECKSUM=1 ROW_FORMAT=DYNAMIC;

/*Data for the table `availabezone` */
insert  into `availablezone`(`id`,`no`,`cnName`,`enName`,`datacenterid`,`dutyTel`,`status`,`isDeleted`,`createTime`,`updateTime`,`createBy`,`updateBy`,`remark`) values (1,0,'AZ1','AZ1',1,'021-XXXXXXXX',1,0,'2023-07-04 14:51:38','2023-07-04 14:51:41',1,NULL,'测试可用区'),(2,1,'BJ_AZ1','BJ_AZ1',2,'010-XXXXXXX',1,0,'2023-07-04 14:52:46','2023-07-04 14:52:46',1,NULL,'北京可用区1');

/* k8s 集群信息表 */
CREATE TABLE `k8scluster` (
  `id` varchar(20) NOT NULL COMMENT '集群ID，非自增，由雪花算法生成',
  `k8sClusterID` varchar(255) DEFAULT NULL COMMENT 'k8s集群自身的ID,这个值的获取见k8sclient组件的GetKubernetesClusterID函数',
  `dcid` int(10) unsigned DEFAULT NULL COMMENT '集群所属的数据中心ID',
  `azid` int(10) unsigned NOT NULL COMMENT '集群所属的可用区ID',
  `cnName` varchar(255) NOT NULL COMMENT '集群中文名称',
  `enName` varchar(255) DEFAULT NULL COMMENT '集群英文名称',
  `apiserver` varchar(255)  COMMENT 'kube apiserver 连接地址和端口',
  `clusterUser` varchar(255) DEFAULT NULL COMMENT '连接集群的集群用户名',
  `connectType` char(1) NOT NULL DEFAULT '0' COMMENT '集群连接方式，定义参见k8scluster模块的k8sclusterDefined.go文件',
  `ca` longtext  COMMENT '连接集群的CA证书',
  `cert` longtext  COMMENT '连接集群的证书',
  `key` longtext  COMMENT '连接集群的密钥',
  `token` longtext COMMENT '连接集群的token值',
  `kubeConfig` longtext COMMENT '连接集群的kubeconfig配置',
  `version` varchar(50) DEFAULT NULL COMMENT '集群的kubernetes版本',
  `cri` varchar(50) DEFAULT NULL COMMENT '集群的cri',
  `podcidr` varchar(50) DEFAULT NULL COMMENT '集群的pod cidr',
  `servicecidr` varchar(50) DEFAULT NULL COMMENT '集群的pod cidr',
  `dutyTel` varchar(20) DEFAULT NULL COMMENT '值班电话',
  `status` tinyint(1) NOT NULL DEFAULT '1' COMMENT '状态0未启用 1已启用 2 已停用',
  `isDeleted` tinyint(1) NOT NULL DEFAULT '0' COMMENT '是否删除 0正常 1已删除',
  `createTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `updateTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
  `createBy` int(10) unsigned DEFAULT NULL COMMENT '创建人,对应user表的userid',
  `updateBy` int(10) unsigned DEFAULT NULL COMMENT '更新人,对应user表的userid',
  `remark` varchar(255) DEFAULT NULL COMMENT '备注',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 CHECKSUM=1 ROW_FORMAT=DYNAMIC

DROP TABLE IF EXISTS `objectinfo`;
CREATE TABLE `objectinfo` (
  `id` int(4) unsigned NOT NULL AUTO_INCREMENT COMMENT '对象ID',
  `cnName` varchar(255) NOT NULL COMMENT '对象中文名称，平台整个环境下不可重复',
  `enName` varchar(255) NOT NULL COMMENT '对象英文名称，平台整个环境下不可重复',
  `tableName` varchar(255) NOT NULL COMMENT '对象所对应的在数据库中表名',
  `pkName` varchar(255) NOT NULL COMMENT '对象数据库表中标识对象的主键的字段名',
  `canRunCommand` tinyint(1) NOT NULL DEFAULT '0' COMMENT '对象上是否可以运行命令.0表示否,1表示是',
  `isCommandRelated` tinyint(1) NOT NULL DEFAULT '0' COMMENT '对象是否可以与命令关联, 即对象的状态是否可以影响命令的执行.0 表示否, 1表示是',
  `deprecated` tinyint(1) NOT NULL DEFAULT '0' COMMENT '是否废弃，0表示否，1表示是',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8 CHECKSUM=1 ROW_FORMAT=DYNAMIC;

/*Data for the table `objectinfo` */

insert  into `objectinfo`(`id`,`cnName`,`enName`,`tableName`,`pkName`,`canRunCommand`,`isCommandRelated`,`deprecated`) values (1,'可用区','availablezone','availablezone','id',0,0,0),(2,'命令','command','commandDefined','id',0,0,0),(3,'数据中心','datacenter','datacenter','id',0,0,0),(4,'主机','host','host','hostid',1,1,0),(5,'集群','k8scluster','k8scluster','id',0,1,0),(6,'操作系统','os','os','osID',0,0,0),(7,'区域','region','country','code',0,0,0),(8,'用户','user','user','userid',0,0,0),(9,'版本','version','version','versionID',0,0,0),(10,'Yum','yum','yum','yumid',0,0,0);



/* objecttable 对象关联表.表示一个对象有多个子对象或元素需要分表存储时，本表记录的是这些子对象和元素的表信息 */
DROP TABLE IF EXISTS `objecttable`;
CREATE TABLE `objecttable` (
  `id` int(4) unsigned NOT NULL AUTO_INCREMENT COMMENT '对象ID',
  `objectID` int(4) unsigned comment '主对象的ID，即对应objectinfo表中id字段的值',
  `cnName` varchar(255) NOT NULL COMMENT '对象中文名称，平台整个环境下不可重复',
  `enName` varchar(255) NOT NULL COMMENT '对象中文名称，平台整个环境下不可重复',
  `tableName` varchar(255) not null comment '对象所对应的在数据库中表名',
  `pkName` varchar(255) not null comment '对象数据库表中标识对象的主键的字段名',
  `canRunCommand` tinyint(1) not null default 0 comment '对象上是否可以运行命令.0表示否,1表示是',
  `isCommandRelated` tinyint(1) not null default 0 comment '对象是否可以与命令关联, 即对象的状态是否可以影响命令的执行.0 表示否, 1表示是',
  `deprecated` tinyint(1) NOT NULL DEFAULT '0' COMMENT '是否废弃，0表示否，1表示是',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=INNODB DEFAULT CHARSET=utf8 CHECKSUM=1 ROW_FORMAT=DYNAMIC;

/* 记录系统事件的事件表 */
DROP TABLE IF EXISTS `events`;
CREATE TABLE `events` (
    `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '事件ID值',
    `class` TINYINT(1) NOT NULL COMMENT '事件类型：0信息类,  1警告, 2错误， 3故障',
    `scope` TINYINT(1) NOT NULL COMMENT '产生事件对象的范围',
    `startTime` INT(11)  COMMENT '事件发生时的时间截',
    `reasonMessage` VARCHAR(255) COMMENT '发生事件的原因',
    `object` VARCHAR(255) COMMENT '产生事件的对象并及其ID或标识',
    `subObject` VARCHAR(255) COMMENT '产生事件如果有子对象，则本字段记录子对象及它的ID或标识',
    `action` VARCHAR(255) COMMENT '事件发生时的动作',
    `data` VARCHAR(1024) COMMENT '记录事件后续处理所必须的数据',
    `userID` INT(10) NULL COMMENT '事件产生时的操作者,如果是系统动作产生的事件,此字段为空',
    `isDeleted` TINYINT(1) NOT NULL DEFAULT '0' COMMENT '是否删除 0正常 1已删除',
    `deletedTime` INT(11) COMMENT '事件的删除时间截',
    PRIMARY KEY (`id`) USING BTREE
) ENGINE=INNODB DEFAULT CHARSET=utf8 CHECKSUM=1 ROW_FORMAT=DYNAMIC;

/* 记录系统事件与用户对应关系的表 */
DROP TABLE IF EXISTS `eventUser`;
CREATE TABLE `eventUser` (
    `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '关系ID值',
    `eventID` INT(10) NOT NULL COMMENT '事件ID值',
    `userID` INT(10) NOT NULL COMMENT '用户ID值',
    `isRead` TINYINT(1) NOT NULL DEFAULT 0 COMMENT '用户是否已经阅读了事件,0表示未读，1表示已读',
    `readTime` INT(11)  COMMENT '如果用户已阅读了事件，记录用户阅读事件的时间截',
    `isDeleted` TINYINT(1) NOT NULL DEFAULT 0 COMMENT '是否删除 0正常 1已删除',
    `deletedTime` INT(11) COMMENT '事件的删除时间截',
    PRIMARY KEY (`id`) USING BTREE
) ENGINE=INNODB DEFAULT CHARSET=utf8 CHECKSUM=1 ROW_FORMAT=DYNAMIC;

/* 系统配置表 */
DROP TABLE IF EXISTS `sysSettings`;
CREATE TABLE `sysSettings` (
    `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '配置的ID值',
    `scope` TINYINT(1) NOT NULL COMMENT '配置项的范围 0 全局 1 k8s集群 2 节点级别 3 项目级别 4 用户组级别 5 用户级别 6 应用级别 ',
    `key` varchar(64) not null comment '配置的key值, 不能为空',
    `defaultValue` longtext  comment '配置项的默认值',
    `value` longtext  comment '配置项值',
    `deprecated` tinyint(1) NOT NULL DEFAULT '0' COMMENT '是否废弃，0表示否，1表示是',
    `deprecatedVersion` varchar(64) comment '废弃的版本号,即应用的版本号大于本字段指定的值表示废弃对应的配置项',
    `deprecatedReason` varchar(255) comment '废弃原因',
    `lastModifiedBy` int(10) unsigned DEFAULT NULL COMMENT '上次修改配置项值的用户,对应user表的userid.0表示系统自动设置的',
    `lastModifiedTime` INT(11)  COMMENT '上次修改配置项值的时间截',
    `lastModifiedReason` varchar(255)  COMMENT '上次修改配置项值的原因',
    `lastValue` longtext comment '上次修改前的值',
    PRIMARY KEY (`id`) USING BTREE
) ENGINE=INNODB DEFAULT CHARSET=utf8 CHECKSUM=1 ROW_FORMAT=DYNAMIC;
