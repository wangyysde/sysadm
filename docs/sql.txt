/*
SQLyog Enterprise - MySQL GUI v8.14 
MySQL - 5.7.30 : Database - sysadm
*********************************************************************
*/


/*!40101 SET NAMES utf8 */;

/*!40101 SET SQL_MODE=''*/;

/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
CREATE DATABASE /*!32312 IF NOT EXISTS*/`sysadm` /*!40100 DEFAULT CHARACTER SET latin1 */;

USE `sysadm`;

/*Table structure for table `user` */

DROP TABLE IF EXISTS `user`;

CREATE TABLE `user` (
  `userid` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT 'userid identified a user',
  `username` varchar(255) NOT NULL COMMENT 'user account',
  `email` varchar(255) DEFAULT NULL COMMENT 'user email address',
  `password` varchar(40) NOT NULL COMMENT 'user password',
  `realname` varchar(255) NOT NULL COMMENT 'user''s real name',
  `comment` varchar(255) DEFAULT NULL COMMENT 'description of a user',
  `deleted` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'the value is true if a user has be deleted',
  `reset_uuid` int(10) DEFAULT NULL COMMENT 'userid who reset the user''s password',
  `salt` varchar(40) NOT NULL COMMENT 'salt of the userpassword',
  `sysadmin_flag` tinyint(1) DEFAULT '0' COMMENT 'the user is an administor of the system if this value is ture',
  `creation_time` int(11) NOT NULL COMMENT 'the time when the user has be create',
  `update_time` int(11) NOT NULL COMMENT 'the time when the user has be update',
  PRIMARY KEY (`userid`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 CHECKSUM=1 DELAY_KEY_WRITE=1 ROW_FORMAT=DYNAMIC;

CREATE TABLE `project` (
  `projectid` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT 'projectid identified a project',
  `ownerid` int(10) unsigned NOT NULL DEFAULT '1' COMMENT 'the owner of the project. owner is the user who created the project normally',
  `name` varchar(255) NOT NULL COMMENT 'project name. it must be a string in english. Is is a part of url of image.',
  `comment` varchar(255) DEFAULT NULL COMMENT 'description of a project',
  `deleted` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'the value is true if a user has be deleted',
  `creation_time` int(11) NOT NULL COMMENT 'the time when the project has be create',
  `update_time` int(11) NOT NULL COMMENT 'the time when the project has be update',
  PRIMARY KEY (`projectid`),
  KEY `FK_project` (`ownerid`),
  CONSTRAINT `FK_project` FOREIGN KEY (`ownerid`) REFERENCES `user` (`userid`) ON DELETE NO ACTION ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 CHECKSUM=1 DELAY_KEY_WRITE=1 ROW_FORMAT=DYNAMIC;

CREATE TABLE `image` (
  `imageid` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT 'imageid identified a container image',
  `projectid` int(10) unsigned NOT NULL DEFAULT '1' COMMENT 'the project of the image. ',
  `name` varchar(255) NOT NULL COMMENT 'image name. it must be a string in english. Is is the uri of image.',
  `ownerid` int(10) unsigned NOT NULL DEFAULT '1' COMMENT 'the owner of the project. owner is the user who created the project normally',
  `description` varchar(255) DEFAULT NULL COMMENT 'the description of a image.',
  `tagsnum` int(10) unsigned NOT NULL DEFAULT '1' COMMENT 'total number of tags of the image',
  `lasttag` varchar(255) NOT NULL COMMENT 'the last tag of the image',
  `architecture` varchar(255) NOT NULL COMMENT 'architecture of the image',
  `pulltimes` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'total times of the image has be pulled',
  `creation_time` int(11) NOT NULL COMMENT 'the time when the project has be create',
  `update_time` int(11) NOT NULL COMMENT 'the time when the project has be update',
  `size` int(16) unsigned NOT NULL DEFAULT '0' COMMENT 'the size of the image',
  PRIMARY KEY (`imageid`),
  KEY `FK_projectr` (`projectid`),
  KEY `FK_user` (`ownerid`),
  CONSTRAINT `FK_projectr` FOREIGN KEY (`projectid`) REFERENCES `project` (`projectid`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `FK_user` FOREIGN KEY (`ownerid`) REFERENCES `user` (`userid`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 CHECKSUM=1 DELAY_KEY_WRITE=1 ROW_FORMAT=DYNAMIC


CREATE TABLE `tag` (
  `tagid` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT 'tagid identified a tag of a image',
  `imageid` int(10) unsigned NOT NULL DEFAULT '1' COMMENT 'imageid identified a container image',
  `name` varchar(255) NOT NULL COMMENT 'tag name. it must be a string in english. Is is a part of the uri of image.',
  `description` varchar(255) DEFAULT NULL COMMENT 'the description of a tag.',
  `pulltimes` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'total times of the tag has be pulled',
  `ownerid` int(10) unsigned NOT NULL DEFAULT '1' COMMENT 'the owner of the tag. owner is the user who pushed the image normally',
  `creation_time` int(11) NOT NULL COMMENT 'the time when the tag has be pushed',
  `update_time` int(11) NOT NULL COMMENT 'the time when the tag has be pushed lastly',
  `size` int(16) unsigned NOT NULL DEFAULT '0' COMMENT 'the size of the  tag',
  `digest` varchar(255) DEFAULT NULL COMMENT 'the digest of the tag ',
  PRIMARY KEY (`tagid`),
  KEY `FK_image` (`imageid`),
  KEY `FK_taguser` (`ownerid`),
  CONSTRAINT `FK_image` FOREIGN KEY (`imageid`) REFERENCES `image` (`imageid`) ON DELETE NO ACTION ON UPDATE CASCADE,
  CONSTRAINT `FK_taguser` FOREIGN KEY (`ownerid`) REFERENCES `user` (`userid`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8 CHECKSUM=1 DELAY_KEY_WRITE=1 ROW_FORMAT=DYNAMIC

create table `blob` (
	`blobid` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'blobid identified a blob of a tag',
	`tagid` INT(10) UNSIGNED NOT NULL DEFAULT '1' COMMENT 'tagid identified a container image',
	`digest` VARCHAR(255) NOT NULL COMMENT 'digest of blog. it must be a string in english.',
	`size` INT(16) UNSIGNED NOT NULL DEFAULT '0' COMMENT 'the size of the  blob',
	`creation_time` INT(11) NOT NULL COMMENT 'the time when the tag has be pushed',
    `update_time` INT(11) NOT NULL COMMENT 'the time when the tag has be pushed lastly',
	PRIMARY KEY (`blobid`),
	KEY `FK_tag` (`tagid`),
	CONSTRAINT `FK_tag` FOREIGN KEY (`tagid`) REFERENCES `tag` (`tagid`) ON DELETE NO ACTION ON UPDATE CASCADE
) ENGINE=INNODB DEFAULT CHARSET=utf8 CHECKSUM=1 DELAY_KEY_WRITE=1 ROW_FORMAT=DYNAMIC;

CREATE TABLE `os` (
  `osID` INT(3) NOT NULL COMMENT 'pecify the yum for which OS distrubition,such as centos,readhat, ubantu',
  `name` VARCHAR(10) NOT NULL COMMENT 'distribution name.such as centos,redhat. this field must be unique',
  `description` VARCHAR(255) DEFAULT NULL COMMENT 'distribution description',
  PRIMARY KEY (`osID`)
) ENGINE=INNODB DEFAULT CHARSET=utf8;

CREATE TABLE `type` (
  `typeID` int(3) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) CHARACTER SET latin1 NOT NULL,
  `comment` varchar(255) CHARACTER SET latin1 DEFAULT NULL,
  PRIMARY KEY (`typeID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin CHECKSUM=1 DELAY_KEY_WRITE=1 ROW_FORMAT=DYNAMIC;

CREATE TABLE `version` (
  `versionID` int(11) NOT NULL COMMENT 'version id identified a version ',
  `name` varchar(255) CHARACTER SET latin1 NOT NULL COMMENT 'version name',
  `osid` int(11) DEFAULT NULL COMMENT 'for which OS.PK of distribution ID',
  `typeID` int(11) DEFAULT NULL COMMENT 'the version for which type of type id',
  `description` varchar(255) CHARACTER SET latin1 DEFAULT NULL COMMENT 'description of the version',
  PRIMARY KEY (`versionID`),
  KEY `FK_os` (`osid`),
  KEY `FK_type` (`typeID`),
  CONSTRAINT `FK_os` FOREIGN KEY (`osid`) REFERENCES `os` (`osID`) ON DELETE CASCADE,
  CONSTRAINT `FK_type` FOREIGN KEY (`typeID`) REFERENCES `type` (`typeID`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin CHECKSUM=1 DELAY_KEY_WRITE=1 ROW_FORMAT=DYNAMIC

CREATE TABLE `yum` (
  `yumid` int(11) unsigned NOT NULL AUTO_INCREMENT COMMENT 'yumid identified a yum configuration ',
  `name` varchar(255) NOT NULL COMMENT 'yum name. it must be a string in english. Is is the block name of yum configuration.',
  `osid` int(11) NOT NULL COMMENT 'specify the yum for which OS distrubition,such as centos,readhat, ubantu....',
  `versionid` int(11) DEFAULT NULL COMMENT 'which version of the OS is for by this yum. normally this is the value of $releasever',
  `typeid` int(11) NOT NULL COMMENT 'what type of the yum is it,such as os, docker, kubernetes,......',
  `catalog` varchar(11) DEFAULT NULL COMMENT 'which catalog  of the yum is it,such as base, update,plus,......',
  `kind` varchar(11) DEFAULT NULL COMMENT 'kind of the yum,such as local,remote.',
  `base_url` varchar(11) DEFAULT NULL COMMENT 'the url of yum if its kind is remote',
  `enabled` tinyint(1) NOT NULL DEFAULT '1' COMMENT 'whether enabled this yum. 1 for enabled, otherwise for disabled',
  `gpgcheck` tinyint(1) NOT NULL DEFAULT '1' COMMENT 'whether gpg check. 1 for check, otherwise for not check',
  `gpgkey` varchar(11) DEFAULT NULL COMMENT 'the path of the gpgkey file for local, the url of the gpgkey file for remote',
  PRIMARY KEY (`yumid`),
  KEY `FK_yumos` (`osid`),
  KEY `FK_yumtype` (`typeid`),
  KEY `FK_yumversion` (`versionid`),
  CONSTRAINT `FK_yumos` FOREIGN KEY (`osid`) REFERENCES `os` (`osID`) ON DELETE CASCADE,
  CONSTRAINT `FK_yumtype` FOREIGN KEY (`typeid`) REFERENCES `type` (`typeID`) ON DELETE CASCADE,
  CONSTRAINT `FK_yumversion` FOREIGN KEY (`versionid`) REFERENCES `version` (`versionID`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 CHECKSUM=1 DELAY_KEY_WRITE=1 ROW_FORMAT=DYNAMIC


CREATE TABLE `host` (
  `hostid` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT 'hostid identified a host',
  `hostname` varchar(255) NOT NULL COMMENT 'host name of OS',
  `osID` int(3) NOT NULL COMMENT 'which OS distrubition,such as centos,readhat, ubantu',
  `versionID` int(11) NOT NULL COMMENT 'version id identified OS version ',
  `statusID` int(3) NOT NULL COMMENT 'identifying a host status',
  `agentAddress` varchar(255) DEFAULT NULL COMMENT '当apiserver是以主动模式运行时，连接客户端agent的地址或域名',
  `commandUri` varchar(255) DEFAULT NULL COMMENT '当apiserver以主动模式运行时，apiserver向agent发送命令时，请求的发送目 标路径。如果本字段为空，则apiserver默认向/receiveCommand请求命令的状态',
  `commandStatusUri` varchar(255) DEFAULT NULL COMMENT '当apiserver以主动模式运行时，apiserver向agent查询命令的执行状态时，请求的发送目\n 标路径。如果本字段为空，则apiserver默认向/getCommandStatus请求命令的状态',
  `commandLogsUri` varchar(255) DEFAULT NULL COMMENT '当apiserver以主动模式运行时，apiserver向agent查询命令的执行日志时，请求的发送目\n          标路径。如果本字段为空，则apiserver默认向/getLogs请求命令的日志',
  `agentIsTls` tinyint(1) DEFAULT '0' COMMENT '当apiserver以主动模式运行时，apiserver连接agent是否使用TLS.0表示否，否则表示是',
  `agentCa` text COMMENT '当apiserver以主动模式运行时，apiserver连接agent时主动采用TLS,本子段是CA证书内容',
  `agentCert` text COMMENT '当apiserver以主动模式运行时，apiserver连接agent时主动采用TLS,本子段是证书内容',
  `agentKey` text COMMENT '当apiserver以主动模式运行时，apiserver连接agent时主动采用TLS,本子段是密钥内容',
  `insecureSkipVerify` tinyint(1) DEFAULT '1' COMMENT '当apiserver以主动模式运行时，apiserver连接agent时主动采用TLS,指定是否跳过检查不合法证书。1表示是，否则为否',
  `agentPort` int(5) DEFAULT '0' COMMENT 'agent listen port when it runing in active\n  mode',
  PRIMARY KEY (`hostid`),
  KEY `FK_status` (`statusID`),
  KEY `FK_osID` (`osID`),
  KEY `FK_version` (`versionID`),
  CONSTRAINT `FK_osID` FOREIGN KEY (`osID`) REFERENCES `os` (`osID`),
  CONSTRAINT `FK_status` FOREIGN KEY (`statusID`) REFERENCES `hostStatus` (`statusID`) ON DELETE NO ACTION,
  CONSTRAINT `FK_version` FOREIGN KEY (`versionID`) REFERENCES `version` (`versionID`)
) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=utf8 CHECKSUM=1 DELAY_KEY_WRITE=1 ROW_FORMAT=DYNAMIC



INSERT INTO `hostStatus`(`statusID`,`name`,`description`) VALUES ( '1','running','running as normal');
INSERT INTO `hostStatus`(`statusID`,`name`,`description`) VALUES ( '2','maintenance','maintenance');
INSERT INTO `hostStatus`(`statusID`,`name`,`description`) VALUES ( '3','offline','offline');
INSERT INTO `hostStatus`(`statusID`,`name`,`description`) VALUES ( '4','remove','host has be removed');

CREATE TABLE `hostIP` (
  `ipID` int(11) unsigned NOT NULL AUTO_INCREMENT COMMENT 'ipID identified a IP adress of host',
  `devName` varchar(10) DEFAULT NULL COMMENT 'interface name of which the ip set',
  `ipv4` varchar(20) DEFAULT NULL COMMENT 'IP address for IPV4',
  `maskv4` varchar(20) DEFAULT NULL COMMENT 'netmask address for ipv4 address',
  `ipv6` varchar(20) DEFAULT NULL COMMENT 'IP address for IPV6',
  `maskv6` varchar(20) DEFAULT NULL COMMENT 'netmask address for ipv4 address',
  `hostid` int(10) unsigned NOT NULL COMMENT 'identifying which host',
  `status` tinyint(1) NOT NULL DEFAULT '1' COMMENT ' 0 for offline, 1 for online',
  `isManage` tinyint(1) NOT NULL DEFAULT '0' COMMENT '0 not management ip, 1 management IP',
  PRIMARY KEY (`ipID`),
  KEY `FK_hostid` (`hostid`),
  CONSTRAINT `FK_hostid` FOREIGN KEY (`hostid`) REFERENCES `host` (`hostid`) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 CHECKSUM=1 DELAY_KEY_WRITE=1 ROW_FORMAT=DYNAMIC

CREATE TABLE `hostMAC` (
  `macID` INT(11) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'macID identified a mac adress of host',
  `devName` VARCHAR(10) DEFAULT NULL COMMENT 'interface name of which the ip set',
  `mac` VARCHAR(20) DEFAULT NULL COMMENT 'mac address',
  `hostid` INT(10) UNSIGNED NOT NULL COMMENT 'identifying which host',
  PRIMARY KEY (`macID`),
  KEY `FK_hostmacid` (`hostid`),
  CONSTRAINT `FK_hostmacid` FOREIGN KEY (`hostid`) REFERENCES `host` (`hostid`) ON DELETE CASCADE
) ENGINE=INNODB DEFAULT CHARSET=utf8 CHECKSUM=1 DELAY_KEY_WRITE=1 ROW_FORMAT=DYNAMIC

/* 主机 yum 配置信息关系表 */
CREATE TABLE `hostYum` (
  `relationID` int(11) unsigned NOT NULL AUTO_INCREMENT COMMENT 'relationID identified relation of host and yum',
  `hostid` int(10) unsigned NOT NULL COMMENT 'identifying which host',
  `yumid` int(11) unsigned NOT NULL COMMENT 'yumid identified a yum configuration ',
  PRIMARY KEY (`relationID`),
  KEY `FK_hostyumID` (`hostid`),
  KEY `FK_hostYum` (`yumid`),
  CONSTRAINT `FK_hostYum` FOREIGN KEY (`yumid`) REFERENCES `yum` (`yumid`) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT `FK_hostyumID` FOREIGN KEY (`hostid`) REFERENCES `host` (`hostid`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 CHECKSUM=1 DELAY_KEY_WRITE=1 ROW_FORMAT=DYNAMIC

 /* 主机管理修改为通过agent组件方式，下面这个表删除 */
 /*
CREATE TABLE `hostUser` (
  `userID` int(11) unsigned NOT NULL AUTO_INCREMENT COMMENT 'userID identified a user on a host',
  `userName` varchar(255) NOT NULL COMMENT 'username on a host',
  `password` varchar(255) NOT NULL COMMENT 'password for a user on a host',
  `hostid` int(10) unsigned NOT NULL COMMENT 'identifying which host',
  PRIMARY KEY (`userID`),
  KEY `FK_hostUser` (`hostid`),
  CONSTRAINT `FK_hostUser` FOREIGN KEY (`hostid`) REFERENCES `host` (`hostid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 CHECKSUM=1 DELAY_KEY_WRITE=1 ROW_FORMAT=DYNAMIC
*/

/* 存储节点上要执行和已经执行的命令的信息*/
CREATE TABLE `command` (
  `commandID` int(11) unsigned NOT NULL AUTO_INCREMENT COMMENT 'commandID identified a command',
  `command` varchar(64) NOT NULL COMMENT 'command name , agent will route handler according to the value of this filed',
  `hostID` int(10) unsigned NOT NULL COMMENT 'identifying which host',
  `synchronized` tinyint(1) DEFAULT '0' COMMENT '指示命令是否是属地同步命令。所谓同步命令是指，命令能够快速执行完成，即能在一个HTTP会话请求超时之前（一般超时时间为几秒内）执行完成的命令。0表示同步命令，否则为异步命令',
  `createTime` int(11) NOT NULL COMMENT 'the time when the command  has be added',
  `sendTime` int(11) DEFAULT '0' COMMENT 'the time when the command has be has be sent to agent',
  `completeTime` int(11) DEFAULT '0' COMMENT 'the time when the command has be run',
  `tryTimes` tinyint(2) DEFAULT '0' COMMENT 'how many times has be tried on the current stage',
  `status` int(4) DEFAULT '0' COMMENT 'command status code',
  PRIMARY KEY (`commandID`),
  KEY `FK_hostCommand` (`hostID`),
  CONSTRAINT `FK_hostCommand` FOREIGN KEY (`hostID`) REFERENCES `host` (`hostid`)
) ENGINE=InnoDB AUTO_INCREMENT=15 DEFAULT CHARSET=utf8 CHECKSUM=1 DELAY_KEY_WRITE=1 ROW_FORMAT=DYNAMIC

/* 存储已经执行完成、出错和超时的命令的历史信息 */
CREATE TABLE `commandHistory` (
    `commandID` INT(11) NOT NULL DEFAULT 0 COMMENT 'commandID identified a command',
    `command` VARCHAR(64) NOT NULL COMMENT 'command name , agent will route handler according to the value of this filed',
    `hostID` INT(10) UNSIGNED NOT NULL COMMENT 'identifying which host',
    `synchronized` TINYINT(1) DEFAULT '0' COMMENT '指示命令是否是属地同步命令。所谓同步命令是指，命令能够快速执行完成，即能在一个HTTP会话请求超时之前（一般超时时间为几秒内）执行完成的命令。0表示同步命令，否则为异步命令',
    `createTime` INT(11) NOT NULL COMMENT 'the time when the command  has be added',
    `sendTime` INT(11) DEFAULT '0' COMMENT 'the time when the command has be has be sent to agent',
    `completeTime` INT(11) DEFAULT '0' COMMENT 'the time when the command has be run',
    `tryTimes` TINYINT(2) DEFAULT '0' COMMENT 'how many times has be tried on the current stage',
    `status` INT(4) DEFAULT '0' COMMENT 'command status code',
    `statusMsg` VARCHAR(255) DEFAULT '' COMMENT '被清理到历史表内的原因'
) ENGINE=INNODB  DEFAULT CHARSET=utf8 CHECKSUM=1 DELAY_KEY_WRITE=1 ROW_FORMAT=DYNAMIC

/* 存储在节点上执行的命令的命令参数信息 */
CREATE TABLE `commandParameters` (
	`parametersID` int(11) unsigned NOT NULL AUTO_INCREMENT COMMENT 'parametersID identified a parameter',
	`name` varchar(64) not null comment 'parameter name which is like flag name in CLI',
	`value` varchar(255) comment 'parameter value',
	`commandID` int(11) unsigned NOT NULL comment 'commandID identified a command',
	PRIMARY KEY (`parametersID`),
	KEY `FK_commandParameters` (`commandID`),
	CONSTRAINT `FK_commandParameters` FOREIGN KEY (`commandID`) REFERENCES `command` (`commandID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 CHECKSUM=1 DELAY_KEY_WRITE=1 ROW_FORMAT=DYNAMIC

/* 存储命令状态的历史信息。当一个命令有多个阶段的时候，本表存储的是对应命令各个命令的状态信息 */
CREATE TABLE `commandStatusHistory` (
    `id` int(11) unsigned NOT NULL AUTO_INCREMENT COMMENT 'id',
    `commandID` INT(11) NOT NULL DEFAULT 0 COMMENT 'commandID identified a command',
    `command` VARCHAR(64) NOT NULL COMMENT 'command name , agent will route handler according to the value of this filed',
    `hostID` INT(10) UNSIGNED NOT NULL COMMENT 'identifying which host',
    `receivedTime` INT(11) DEFAULT '0' COMMENT '状态接收到的时间截',
    `status` INT(4) DEFAULT '0' COMMENT '状态码,对应于CommandStatusCode',
    `statusMsg` VARCHAR(255) DEFAULT '' COMMENT '状态信息的描述信息',
    PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 CHECKSUM=1 DELAY_KEY_WRITE=1 ROW_FORMAT=DYNAMIC

/* 存储在节点上执行的命令的发送和执行的日志信息 */
CREATE TABLE `commandLogs` (
  `logID` int(11) unsigned NOT NULL AUTO_INCREMENT COMMENT 'logID identified a log',
  `logSeq` char(14) DEFAULT NULL COMMENT 'log sequence',
  `commandID` int(11) unsigned NOT NULL COMMENT 'commandID identified a command',
  `createTime` int(11) NOT NULL COMMENT 'the time when the log has be created',
  `level` int(2) DEFAULT NULL COMMENT 'log level',
  `operation` tinyint(1) NOT NULL DEFAULT '0' COMMENT '0: create command 1: send command  2: running 3: received result',
  `logMessage` varchar(255) DEFAULT NULL COMMENT 'log message',
  PRIMARY KEY (`logID`),
  KEY `FK_commandLogs` (`commandID`),
  CONSTRAINT `FK_commandLogs` FOREIGN KEY (`commandID`) REFERENCES `command` (`commandID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 CHECKSUM=1 DELAY_KEY_WRITE=1 ROW_FORMAT=DYNAMIC


/* 在事务中向表中添加数据时，自增字段的值在当前事务中是获取不到的，为此增加ids表，该表记录拥有自增字段的表名、自增字段和自增字段的下一个值 */
CREATE TABLE `ids` (
  tableName VARCHAR(255) NOT NULL COMMENT 'table name which has AUTO_INCREMENT ID  field',
  fieldName VARCHAR(255) NOT NULL COMMENT 'field name which is a AUTO_INCREMENT ID  field',
  nextValue INT(11) NOT NULL DEFAULT 1 COMMENT 'the next value of ID'
) ENGINE=INNODB DEFAULT CHARSET=utf8 CHECKSUM=1 ROW_FORMAT=DYNAMIC

insert into `ids`(`tableName`,`fieldName`,`nextValue`) values ('host','hostid',1);
insert into `ids`(`tableName`,`fieldName`,`nextValue`) values ('command','commandID',1);